{"ast":null,"code":"module.exports = class Ripple {\n  constructor() {\n    this.x = 0;\n    this.y = 0;\n    this.z = 0;\n  }\n\n  findFurthestPoint(clickPointX, elementWidth, offsetX, clickPointY, elementHeight, offsetY) {\n    this.x = clickPointX - offsetX > elementWidth / 2 ? 0 : elementWidth;\n    this.y = clickPointY - offsetY > elementHeight / 2 ? 0 : elementHeight;\n    this.z = Math.hypot(this.x - (clickPointX - offsetX), this.y - (clickPointY - offsetY));\n    return this.z;\n  }\n\n  appyStyles(element, color, rect, radius, event) {\n    element.classList.add('ripple');\n    element.style.backgroundColor = color === 'dark' ? 'rgba(0,0,0, 0.2)' : 'rgba(255,255,255, 0.3)';\n    element.style.borderRadius = '50%';\n    element.style.pointerEvents = 'none';\n    element.style.position = 'absolute';\n    element.style.left = event.clientX - rect.left - radius + 'px';\n    element.style.top = event.clientY - rect.top - radius + 'px';\n    element.style.width = element.style.height = radius * 2 + 'px';\n  }\n\n  applyAnimation(element) {\n    element.animate([{\n      transform: 'scale(0)',\n      opacity: 1\n    }, {\n      transform: 'scale(1.5)',\n      opacity: 0\n    }], {\n      duration: 500,\n      easing: 'linear'\n    });\n  }\n\n  create(event, color) {\n    const element = event.currentTarget;\n    element.style.position = 'relative';\n    element.style.overflow = 'hidden';\n    const rect = element.getBoundingClientRect();\n    const radius = this.findFurthestPoint(event.clientX, element.offsetWidth, rect.left, event.clientY, element.offsetHeight, rect.top);\n    const circle = document.createElement('span');\n    this.appyStyles(circle, color, rect, radius, event);\n    this.applyAnimation(circle);\n    element.appendChild(circle);\n    setTimeout(() => circle.remove(), 500);\n  }\n\n};","map":{"version":3,"sources":["/home/navy/Documents/portfolio/node_modules/material-ripple-effects/index.js"],"names":["module","exports","Ripple","constructor","x","y","z","findFurthestPoint","clickPointX","elementWidth","offsetX","clickPointY","elementHeight","offsetY","Math","hypot","appyStyles","element","color","rect","radius","event","classList","add","style","backgroundColor","borderRadius","pointerEvents","position","left","clientX","top","clientY","width","height","applyAnimation","animate","transform","opacity","duration","easing","create","currentTarget","overflow","getBoundingClientRect","offsetWidth","offsetHeight","circle","document","createElement","appendChild","setTimeout","remove"],"mappings":"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","sourcesContent":["module.exports = class Ripple {\r\n  constructor() {\r\n    this.x = 0;\r\n    this.y = 0;\r\n    this.z = 0;\r\n  }\r\n\r\n  findFurthestPoint(\r\n    clickPointX,\r\n    elementWidth,\r\n    offsetX,\r\n    clickPointY,\r\n    elementHeight,\r\n    offsetY,\r\n  ) {\r\n    this.x = clickPointX - offsetX > elementWidth / 2 ? 0 : elementWidth;\r\n    this.y = clickPointY - offsetY > elementHeight / 2 ? 0 : elementHeight;\r\n    this.z = Math.hypot(\r\n      this.x - (clickPointX - offsetX),\r\n      this.y - (clickPointY - offsetY),\r\n    );\r\n\r\n    return this.z;\r\n  }\r\n\r\n  appyStyles(element, color, rect, radius, event) {\r\n    element.classList.add('ripple');\r\n    element.style.backgroundColor =\r\n      color === 'dark' ? 'rgba(0,0,0, 0.2)' : 'rgba(255,255,255, 0.3)';\r\n    element.style.borderRadius = '50%';\r\n    element.style.pointerEvents = 'none';\r\n    element.style.position = 'absolute';\r\n    element.style.left = event.clientX - rect.left - radius + 'px';\r\n    element.style.top = event.clientY - rect.top - radius + 'px';\r\n    element.style.width = element.style.height = radius * 2 + 'px';\r\n  }\r\n\r\n  applyAnimation(element) {\r\n    element.animate(\r\n      [\r\n        {\r\n          transform: 'scale(0)',\r\n          opacity: 1,\r\n        },\r\n        {\r\n          transform: 'scale(1.5)',\r\n          opacity: 0,\r\n        },\r\n      ],\r\n      {\r\n        duration: 500,\r\n        easing: 'linear',\r\n      },\r\n    );\r\n  }\r\n\r\n  create(event, color) {\r\n    const element = event.currentTarget;\r\n\r\n    element.style.position = 'relative';\r\n    element.style.overflow = 'hidden';\r\n\r\n    const rect = element.getBoundingClientRect();\r\n\r\n    const radius = this.findFurthestPoint(\r\n      event.clientX,\r\n      element.offsetWidth,\r\n      rect.left,\r\n      event.clientY,\r\n      element.offsetHeight,\r\n      rect.top,\r\n    );\r\n\r\n    const circle = document.createElement('span');\r\n\r\n    this.appyStyles(circle, color, rect, radius, event);\r\n    this.applyAnimation(circle);\r\n\r\n    element.appendChild(circle);\r\n\r\n    setTimeout(() => circle.remove(), 500);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}