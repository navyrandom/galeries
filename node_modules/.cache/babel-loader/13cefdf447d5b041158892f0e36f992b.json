{"ast":null,"code":"var _jsxFileName = \"/home/navy/Documents/portfolio/src/fonctionnalities/NewProject.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Modal from \"@material-tailwind/react/Modal\";\nimport ModalHeader from \"@material-tailwind/react/ModalHeader\";\nimport ModalBody from \"@material-tailwind/react/ModalBody\";\nimport ModalFooter from \"@material-tailwind/react/ModalFooter\";\nimport Button from \"@material-tailwind/react/Button\";\nimport Textarea from \"@material-tailwind/react/Textarea\";\nimport { IconButton, makeStyles } from \"@material-ui/core\";\nimport Input from \"@material-tailwind/react/Input\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyle = makeStyles({\n  input: {\n    width: \"200px\"\n  }\n});\nexport default function NewProject() {\n  _s();\n\n  const classes = useStyle();\n  const [showModal, setShowModal] = React.useState(false);\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const portfolio = {\n    title: \"\",\n    description: \"\",\n    image: \"\"\n  };\n\n  const handleClick = async portfolio => {\n    await axios.post(\"http://localhost:3031/portfolio/\", portfolio);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      color: \"lightGreen\",\n      type: \"button\",\n      onClick: e => setShowModal(true),\n      ripple: \"light\",\n      size: \"lg\",\n      children: \"+ Add new project to the portfolio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      size: \"lg\",\n      active: showModal,\n      toggler: () => setShowModal(false),\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggler: () => setShowModal(false),\n        children: [\"Add new project \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: [\"Title\", /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          color: \"lightBlue\",\n          size: \"lg\",\n          outline: false,\n          size: \"lg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), \"Description\", /*#__PURE__*/_jsxDEV(Textarea, {\n          color: \"lightBlue\",\n          size: \"regular\",\n          outline: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), imageUrl ? /*#__PURE__*/_jsxDEV(\"a\", {\n          href: imageUrl,\n          download: true,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: imageUrl,\n            alt: \"upload\",\n            href: imageUrl,\n            download: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(Input, {\n          type: \"file\",\n          color: \"lightBlue\",\n          size: \"lg\",\n          outline: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"red\",\n          buttonType: \"link\",\n          onClick: e => setShowModal(false),\n          ripple: \"dark\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"green\",\n          onClick: handleClick,\n          ripple: \"light\",\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(NewProject, \"sQzn/VUngLK0EIhqErvSvmM8KFs=\", false, function () {\n  return [useStyle];\n});\n\n_c = NewProject;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewProject\");","map":{"version":3,"sources":["/home/navy/Documents/portfolio/src/fonctionnalities/NewProject.jsx"],"names":["React","Modal","ModalHeader","ModalBody","ModalFooter","Button","Textarea","IconButton","makeStyles","Input","ImageIcon","useState","axios","useStyle","input","width","NewProject","classes","showModal","setShowModal","imageUrl","setImageUrl","portfolio","title","description","image","handleClick","post","e"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Modal from \"@material-tailwind/react/Modal\";\nimport ModalHeader from \"@material-tailwind/react/ModalHeader\";\nimport ModalBody from \"@material-tailwind/react/ModalBody\";\nimport ModalFooter from \"@material-tailwind/react/ModalFooter\";\nimport Button from \"@material-tailwind/react/Button\";\nimport Textarea from \"@material-tailwind/react/Textarea\";\nimport { IconButton, makeStyles } from \"@material-ui/core\";\nimport Input from \"@material-tailwind/react/Input\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\n\n\nconst useStyle = makeStyles({\n  input: {\n    width: \"200px\",\n  },\n});\n\nexport default function NewProject() {\n  const classes = useStyle();\n  const [showModal, setShowModal] = React.useState(false);\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const portfolio = {\n    title: \"\",\n    description:\"\",\n    image:\"\",\n    \n  }\n  const handleClick= async (portfolio) => {\n    await axios.post(\"http://localhost:3031/portfolio/\", portfolio)\n  };\n\n\n  return (\n    <>\n      <Button\n        color=\"lightGreen\"\n        type=\"button\"\n        onClick={(e) => setShowModal(true)}\n        ripple=\"light\"\n      size=\"lg\"\n      >\n      + Add new project to the portfolio \n      </Button>\n\n      <Modal size=\"lg\" active={showModal} toggler={() => setShowModal(false)}>\n        <ModalHeader toggler={() => setShowModal(false)}>\n          Add new project <br />\n        </ModalHeader>\n        <ModalBody>\n          Title\n          <Input\n            type=\"text\"\n            color=\"lightBlue\"\n            size=\"lg\"\n            outline={false}\n            size=\"lg\"\n          />\n          Description\n          <Textarea color=\"lightBlue\" size=\"regular\" outline={false} />\n          \n        \n        \n          {imageUrl ? (\n            <a href={imageUrl} download>\n              <img src={imageUrl} alt=\"upload\" href={imageUrl} download />\n            </a>) : null\n        }<Input\n        type=\"file\"\n        color=\"lightBlue\"\n        size=\"lg\"\n        outline={false}\n      />\n           \n         \n        </ModalBody>\n        <ModalFooter>\n          <Button\n            color=\"red\"\n            buttonType=\"link\"\n            onClick={(e) => setShowModal(false)}\n            ripple=\"dark\"\n          >\n            Close\n          </Button>\n\n          <Button\n            color=\"green\"\n            onClick={handleClick}\n            ripple=\"light\"\n          >\n            Save Changes\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}