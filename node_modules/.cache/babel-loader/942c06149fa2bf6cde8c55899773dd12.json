{"ast":null,"code":"var _jsxFileName = \"/home/navy/Documents/portfolio/src/fonctionnalities/NewProject.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Modal from \"@material-tailwind/react/Modal\";\nimport ModalHeader from \"@material-tailwind/react/ModalHeader\";\nimport ModalBody from \"@material-tailwind/react/ModalBody\";\nimport ModalFooter from \"@material-tailwind/react/ModalFooter\";\nimport Button from \"@material-tailwind/react/Button\";\nimport Textarea from \"@material-tailwind/react/Textarea\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Input from \"@material-tailwind/react/Input\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyle = makeStyles({\n  input: {\n    width: \"200px\"\n  },\n  button: {\n    backgroundColor: '#496480'\n  }\n});\nexport default function NewProject() {\n  _s();\n\n  const classes = useStyle();\n  const [showModal, setShowModal] = React.useState(false); // const [imageUrl, setImageUrl] = useState(\"\");\n\n  const [portfolio, setPortfolio] = useState({\n    title: \"\",\n    description: \"\",\n    image: \"\",\n    like: 0\n  });\n\n  const handleClickOpen = () => {\n    setShowModal(true);\n  };\n\n  const handleClose = () => {\n    setShowModal(false);\n  };\n\n  const handleChange = e => {\n    setPortfolio({ ...portfolio,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleClickAdd = async () => {\n    await axios.post(\"http://localhost:3031/portfolio\", portfolio).then(response => {\n      setPortfolio(response.data);\n      setShowModal(false);\n      window.location.reload();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: classes.button,\n      type: \"button\",\n      onClick: e => setShowModal(true),\n      ripple: \"light\",\n      size: \"lg\",\n      children: \"+ Add new project to the portfolio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      size: \"lg\",\n      active: showModal,\n      toggler: () => setShowModal(false),\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggler: () => setShowModal(false),\n        children: [\"Add new project \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: [\"Title\", /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          color: \"lightBlue\",\n          size: \"lg\",\n          outline: false,\n          name: \"title\",\n          value: portfolio.title,\n          onChange: handleChange,\n          style: {\n            width: '1000px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), \"Description\", /*#__PURE__*/_jsxDEV(Textarea, {\n          color: \"lightBlue\",\n          size: \"regular\",\n          outline: false,\n          name: \"description\",\n          value: portfolio.description,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), \"Lien de l'image\", /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          color: \"lightBlue\",\n          size: \"lg\",\n          outline: false,\n          name: \"image\",\n          value: portfolio.image,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"red\",\n          buttonType: \"link\",\n          onClick: handleClose,\n          ripple: \"dark\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"green\",\n          onClick: handleClickAdd,\n          ripple: \"light\",\n          children: \"Definitely post this!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(NewProject, \"NMbD3hoH8c39roNUDbYAp9aGMqA=\", false, function () {\n  return [useStyle];\n});\n\n_c = NewProject;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewProject\");","map":{"version":3,"sources":["/home/navy/Documents/portfolio/src/fonctionnalities/NewProject.jsx"],"names":["React","Modal","ModalHeader","ModalBody","ModalFooter","Button","Textarea","makeStyles","Input","useState","axios","useStyle","input","width","button","backgroundColor","NewProject","classes","showModal","setShowModal","portfolio","setPortfolio","title","description","image","like","handleClickOpen","handleClose","handleChange","e","target","name","value","handleClickAdd","post","then","response","data","window","location","reload"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Modal from \"@material-tailwind/react/Modal\";\nimport ModalHeader from \"@material-tailwind/react/ModalHeader\";\nimport ModalBody from \"@material-tailwind/react/ModalBody\";\nimport ModalFooter from \"@material-tailwind/react/ModalFooter\";\nimport Button from \"@material-tailwind/react/Button\";\nimport Textarea from \"@material-tailwind/react/Textarea\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Input from \"@material-tailwind/react/Input\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\n\n\nconst useStyle = makeStyles({\n  input: {\n    width: \"200px\",\n  },\n  button: {\n    backgroundColor: '#496480',\n  }\n});\n\nexport default function NewProject() {\n  const classes = useStyle();\n  const [showModal, setShowModal] = React.useState(false);\n  // const [imageUrl, setImageUrl] = useState(\"\");\n  const [portfolio, setPortfolio] = useState({\n    title: \"\",\n    description: \"\",\n    image: \"\",\n    like: 0,\n  });\n  const handleClickOpen = () => {\n    setShowModal(true);\n  };\n  const handleClose = () => {\n    setShowModal(false);\n  };\n  const handleChange = (e) => {\n    setPortfolio({ ...portfolio, [e.target.name]: e.target.value });\n  };\n  const handleClickAdd = async () => {\n    await axios\n      .post(\"http://localhost:3031/portfolio\", portfolio)\n      .then((response) => {\n        setPortfolio(response.data);\n        setShowModal(false);\n        window.location.reload();\n      });\n  };\n\n  return (\n    <>\n      <Button\n        className={classes.button}\n        type=\"button\"\n        onClick={(e) => setShowModal(true)}\n        ripple=\"light\"\n        size=\"lg\"\n      >\n        + Add new project to the portfolio\n      </Button>\n\n      <Modal size=\"lg\" active={showModal} toggler={() => setShowModal(false)}>\n        <ModalHeader toggler={() => setShowModal(false)}>\n          Add new project <br />\n        </ModalHeader>\n        <ModalBody>\n          Title\n          <Input\n            type=\"text\"\n            color=\"lightBlue\"\n            size=\"lg\"\n            outline={false}\n            name=\"title\"\n            value={portfolio.title}\n            onChange={handleChange}\n            style={{width: '1000px'}}\n          />\n          Description\n          <Textarea color=\"lightBlue\" size=\"regular\" outline={false}\n          name=\"description\"\n          value={portfolio.description}\n          onChange={handleChange}\n          />\n          Lien de l'image\n            <Input\n            type=\"text\"\n            color=\"lightBlue\"\n            size=\"lg\"\n            outline={false}\n            name=\"image\"\n            value={portfolio.image}\n            onChange={handleChange}\n          />\n          {/* {imageUrl ? (\n            <a href={imageUrl} download>\n              <img src={imageUrl} alt=\"upload\" href={imageUrl} download />\n            </a>\n          ) : null}\n          <Input type=\"file\" color=\"lightBlue\" size=\"lg\" outline={false} /> */}\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            color=\"red\"\n            buttonType=\"link\"\n            onClick={handleClose}\n            ripple=\"dark\"\n          >\n            Cancel\n          </Button>\n\n          <Button color=\"green\" onClick={handleClickAdd} ripple=\"light\">\n            Definitely post this!\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}