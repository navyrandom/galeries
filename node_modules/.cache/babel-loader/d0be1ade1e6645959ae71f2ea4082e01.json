{"ast":null,"code":"var _jsxFileName = \"/home/navy/Documents/portfolio/src/fonctionnalities/NewProject.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Modal from \"@material-tailwind/react/Modal\";\nimport ModalHeader from \"@material-tailwind/react/ModalHeader\";\nimport ModalBody from \"@material-tailwind/react/ModalBody\";\nimport ModalFooter from \"@material-tailwind/react/ModalFooter\";\nimport Button from \"@material-tailwind/react/Button\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Input from \"@material-tailwind/react/Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyle = makeStyles({\n  input: {\n    width: \"200px\"\n  }\n});\nexport default function NewProject() {\n  _s();\n\n  const [showModal, setShowModal] = React.useState(false);\n  const project = [{\n    title: \"ZEFZEF\",\n    description: \"ZFERGGTEGE\",\n    image: \"\"\n  }];\n  const classes = useStyle();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      color: \"lightBlue\",\n      type: \"button\",\n      onClick: e => setShowModal(true),\n      ripple: \"light\",\n      children: \"Open large Modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      size: \"lg\",\n      active: showModal,\n      toggler: () => setShowModal(false),\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggler: () => setShowModal(false),\n        children: [\"Add new project \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          color: \"lightBlue\",\n          size: \"lg\",\n          outline: false,\n          placeholder: \"title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          color: \"lightBlue\",\n          size: \"lg\",\n          outline: false,\n          placeholder: \"description\",\n          style: {\n            width: \"1000px\",\n            marginTop: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"red\",\n          buttonType: \"link\",\n          onClick: e => setShowModal(false),\n          ripple: \"dark\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"green\",\n          onClick: e => setShowModal(false),\n          ripple: \"light\",\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(NewProject, \"k3PKPZa0Gau3j0K05DITH+2bYVk=\", false, function () {\n  return [useStyle];\n});\n\n_c = NewProject;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewProject\");","map":{"version":3,"sources":["/home/navy/Documents/portfolio/src/fonctionnalities/NewProject.jsx"],"names":["React","useState","Modal","ModalHeader","ModalBody","ModalFooter","Button","makeStyles","Input","useStyle","input","width","NewProject","showModal","setShowModal","project","title","description","image","classes","e","marginTop"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,gCAAlB;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AAEA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,KAAP,MAAkB,gCAAlB;;;AAEA,MAAMC,QAAQ,GAAGF,UAAU,CAAC;AAC1BG,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE;AADF;AADmB,CAAD,CAA3B;AAMA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACnC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bd,KAAK,CAACC,QAAN,CAAe,KAAf,CAAlC;AACA,QAAMc,OAAO,GAAG,CAAC;AAAEC,IAAAA,KAAK,EAAE,QAAT;AAAmBC,IAAAA,WAAW,EAAE,YAAhC;AAA8CC,IAAAA,KAAK,EAAE;AAArD,GAAD,CAAhB;AACA,QAAMC,OAAO,GAAGV,QAAQ,EAAxB;AAEA,sBACE;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,KAAK,EAAC,WADR;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,OAAO,EAAGW,CAAD,IAAON,YAAY,CAAC,IAAD,CAH9B;AAIE,MAAA,MAAM,EAAC,OAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,IAAZ;AAAiB,MAAA,MAAM,EAAED,SAAzB;AAAoC,MAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,KAAD,CAA/D;AAAA,8BACE,QAAC,WAAD;AAAa,QAAA,OAAO,EAAE,MAAMA,YAAY,CAAC,KAAD,CAAxC;AAAA,oDACe;AAAA;AAAA;AAAA;AAAA,gBADf;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,SAAD;AAAA,gCACE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,KAAK,EAAC,WAFR;AAGE,UAAA,IAAI,EAAC,IAHP;AAIE,UAAA,OAAO,EAAE,KAJX;AAKE,UAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,gBADF,eASE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,KAAK,EAAC,WAFR;AAGE,UAAA,IAAI,EAAC,IAHP;AAIE,UAAA,OAAO,EAAE,KAJX;AAKE,UAAA,WAAW,EAAC,aALd;AAME,UAAA,KAAK,EAAE;AAACH,YAAAA,KAAK,EAAE,QAAR;AAAkBU,YAAAA,SAAS,EAAC;AAA5B;AANT;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAsBE,QAAC,WAAD;AAAA,gCACE,QAAC,MAAD;AACE,UAAA,KAAK,EAAC,KADR;AAEE,UAAA,UAAU,EAAC,MAFb;AAGE,UAAA,OAAO,EAAGD,CAAD,IAAON,YAAY,CAAC,KAAD,CAH9B;AAIE,UAAA,MAAM,EAAC,MAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE,QAAC,MAAD;AACE,UAAA,KAAK,EAAC,OADR;AAEE,UAAA,OAAO,EAAGM,CAAD,IAAON,YAAY,CAAC,KAAD,CAF9B;AAGE,UAAA,MAAM,EAAC,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA,kBADF;AAsDD;;GA3DuBF,U;UAGNH,Q;;;KAHMG,U","sourcesContent":["import React, { useState } from \"react\";\nimport Modal from \"@material-tailwind/react/Modal\";\nimport ModalHeader from \"@material-tailwind/react/ModalHeader\";\nimport ModalBody from \"@material-tailwind/react/ModalBody\";\nimport ModalFooter from \"@material-tailwind/react/ModalFooter\";\nimport Button from \"@material-tailwind/react/Button\";\n\nimport { makeStyles } from \"@material-ui/core\";\nimport Input from \"@material-tailwind/react/Input\";\n\nconst useStyle = makeStyles({\n  input: {\n    width: \"200px\",\n  },\n});\n\nexport default function NewProject() {\n  const [showModal, setShowModal] = React.useState(false);\n  const project = [{ title: \"ZEFZEF\", description: \"ZFERGGTEGE\", image: \"\" }];\n  const classes = useStyle();\n\n  return (\n    <>\n      <Button\n        color=\"lightBlue\"\n        type=\"button\"\n        onClick={(e) => setShowModal(true)}\n        ripple=\"light\"\n      >\n        Open large Modal\n      </Button>\n\n      <Modal size=\"lg\" active={showModal} toggler={() => setShowModal(false)}>\n        <ModalHeader toggler={() => setShowModal(false)}>\n       Add new project <br/>\n        </ModalHeader>\n        <ModalBody>\n          <Input\n            type=\"text\"\n            color=\"lightBlue\"\n            size=\"lg\"\n            outline={false}\n            placeholder=\"title\"\n          />\n\n          <Input\n            type=\"text\"\n            color=\"lightBlue\"\n            size=\"lg\"\n            outline={false}\n            placeholder=\"description\"\n            style={{width: \"1000px\", marginTop:\"10px\"}}\n          />\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            color=\"red\"\n            buttonType=\"link\"\n            onClick={(e) => setShowModal(false)}\n            ripple=\"dark\"\n          >\n            Close\n          </Button>\n\n          <Button\n            color=\"green\"\n            onClick={(e) => setShowModal(false)}\n            ripple=\"light\"\n          >\n            Save Changes\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}